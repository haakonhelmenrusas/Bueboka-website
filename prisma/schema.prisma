generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id           String     @id @default(cuid())
    email        String?    @unique
    name         String
    club         String?
    profileImage String?
    bows         Bow[]
    arrows       Arrows[]
    practices    Practice[]
    createdAt    DateTime
    updatedAt    DateTime
}

model Bow {
    id         String     @id @default(cuid())
    user       User       @relation(fields: [userId], references: [id])
    userId     String
    practice   Practice[]
    type       BowType
    eyeToNock  Int?
    aimMeasure Int?
    eyeToSight Int?
    notes      String?
    createdAt  DateTime
    updatedAt  DateTime
}

model Arrows {
    id          String     @id @default(cuid())
    user        User       @relation(fields: [userId], references: [id])
    userId      String
    practice    Practice[]
    diameter    Float?
    weight      Float?
    length      Float?
    material    String?
    spine       String?
    pointType   String?
    pointWeight Float?
    vanes       String?
    nock        String?
    notes       String?
    createdAt   DateTime
    updatedAt   DateTime
}

model Practice {
    id          String             @id @default(cuid())
    user        User               @relation(fields: [userId], references: [id])
    userId      String
    date        DateTime
    notes       String?
    totalScore  Int
    location    String?
    environment Environment
    weather     WeatherCondition[]
    roundType   RoundType          @relation(fields: [roundTypeId], references: [id])
    roundTypeId String             @unique
    bow         Bow                @relation(fields: [bowId], references: [id])
    bowId       String
    arrows      Arrows             @relation(fields: [arrowsId], references: [id])
    arrowsId    String
    ends        End[]
    createdAt   DateTime
    updatedAt   DateTime
}

model RoundType {
    id             String      @id @default(cuid())
    name           String
    Practice       Practice?
    environment    Environment
    distanceMeters Int?
    targetSizeCm   Int?
    createdAt      DateTime
    updatedAt      DateTime
}

model End {
    id             String   @id @default(cuid())
    Practice       Practice @relation(fields: [practiceId], references: [id])
    practiceId     String
    arrows         Int
    scores         Int[]
    distanceMeters Int?
    targetSizeCm   Int?
    arrowsPerEnd   Int?
    createdAt      DateTime
    updatedAt      DateTime
}

enum Environment {
    INDOOR
    OUTDOOR
}

enum WeatherCondition {
    SUN
    CLOUDED
    RAIN
    WIND
    SNOW
    FOG
    THUNDER
    CHANGING_CONDITIONS
    OTHER
}

enum BowType {
    RECURVE
    COMPOUND
    LONGBOW
    BAREBOW
    HORSEBOW
    TRADITIONAL
    OTHER
}
